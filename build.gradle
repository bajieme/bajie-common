buildscript {
    ext {

        set('javaVersion', JavaVersion.VERSION_1_8)
        set('springVersion', "5.2.8.RELEASE")
        set('springBootVersion', "2.3.3.RELEASE")
        set('springBootManagementVersion', "1.0.10.RELEASE")
        set('springCloudVersion', "Hoxton.SR8")
        set('springCloudAlibabaVersion', "2.2.1.RELEASE")
        set('junitVersion', "5.6.2")

        lib = [
                // spring
                "spring-context"         : "org.springframework:spring-context:${springVersion}",
                "spring-tx"              : "org.springframework:spring-tx:${springVersion}",
                "spring-web"             : "org.springframework:spring-web:${springVersion}",
                // apo
                "spring-aop"             : "org.springframework:spring-aop:${springVersion}",
                "aspectjrt"              : "org.aspectj:aspectjrt:1.9.6",
                "aspectjweaver"          : "org.aspectj:aspectjweaver:1.9.6",
                // common
                "lombok"                 : 'org.projectlombok:lombok:1.18.12',
                "slf4j-api"              : "org.slf4j:slf4j-api:1.7.30",
                "logback-classic"        : "ch.qos.logback:logback-classic:1.2.3",
                "cglib"                  : "cglib:cglib:3.3.0",
                // 工具
                "commons-lang3"          : 'org.apache.commons:commons-lang3:3.11',
                "commons-collections4"   : 'org.apache.commons:commons-collections4:4.4',
                "commons-io"             : 'commons-io:commons-io:2.7',
                "hutool"                 : 'cn.hutool:hutool-all:5.4.0',
                "fastjson"               : 'com.alibaba:fastjson:1.2.73',
                "jackson"                : 'com.fasterxml.jackson.core:jackson-databind:2.11.1',
                "gson"                   : 'com.google.code.gson:gson:2.8.6',
                "lagarto"                : 'org.jodd:jodd-lagarto:5.1.5',
                "guava"                  : 'com.google.guava:guava:29.0-jre',
                // jackson
                "jackson-databind"       : "com.fasterxml.jackson.core:jackson-databind:2.11.2",
                "jackson-datatype-jsr310": 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.2',
                // test
                "assertj-core"           : "org.assertj:assertj-core:3.16.1",
                "junit-jupiter-api"      : "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
                "junit-jupiter-engine"   : "org.junit.jupiter:junit-jupiter-engine:${junitVersion}",
                // swagger
                "swagger-annotations"    : "io.swagger:swagger-annotations:1.6.2",
                "knife4j-boot"           : 'com.github.xiaoymin:knife4j-spring-boot-starter:2.0.5',
                "knife4j-micro"          : 'com.github.xiaoymin:knife4j-micro-spring-boot-starter:2.0.5',
                // 消除警告
                "annotations"            : 'com.google.code.findbugs:annotations:3.0.1',
                // mapstruct
                "mapstruct"              : 'org.mapstruct:mapstruct:1.3.1.Final',
                "mapstruct-processor"    : 'org.mapstruct:mapstruct-processor:1.3.1.Final',
                // servlet
                "javax.servlet-api"      : "javax.servlet:javax.servlet-api:4.0.1",
                // lettuce
                "lettuce-core"           : 'io.lettuce:lettuce-core:6.0.0.RC1',
                // jjwt
                "jjwt"                   : 'io.jsonwebtoken:jjwt:0.9.1'
        ]

        // 私服打包配置
        nexus = [
                userName : 'admin',
                password : 'Bajie@2021',
                releasesUrl : 'http://121.40.32.242:8081/repository/bajie-release/',
                snapshotUrl : 'http://121.40.32.242:8081/repository/bajie-snapshot/',
        ]
    }

    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'http://121.40.32.242:8081/repository/bajie-snapshot/' }
        maven { url 'http://121.40.32.242:8081/repository/bajie-release/' }
        maven { url 'http://121.40.32.242:8081/repository/maven-public/' }
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'idea'
    // 上传代码到私服插件
    id 'maven'
    id 'java-library'
    // spring boot 插件
    id 'org.springframework.boot' version "${springBootVersion}"
    // Gradle插件，提供类似Maven的依赖关系管理功能
    id 'io.spring.dependency-management' version "${springBootManagementVersion}"
}

// 所有项目
allprojects {
    group 'com.bajie'
    // 快照版本号 '1.0.0-SNAPSHOT'
    version '1.0.0-SNAPSHOT'

    // 最新快照
    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
}

// 排除子项目boot工程打包
if (project.subprojects) {
    bootJar {
        enabled = false
    }
}


// 设定子模块的通用配置
subprojects {

    apply plugin: 'java'
    apply plugin: 'idea'
    // 上传代码到私服插件
    apply plugin: 'maven'
    apply plugin: 'java-library'
    // spring boot 插件
    apply plugin: 'org.springframework.boot'
    // Gradle插件，提供类似Maven的依赖关系管理功能
    apply plugin: 'io.spring.dependency-management'

    compileJava {
        sourceCompatibility = "${javaVersion}"
        targetCompatibility = "${javaVersion}"
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    jar {
        enabled(true)
    }
    bootJar {
        enabled(false)
    }

    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'http://121.40.32.242:8081/repository/bajie-snapshot/' }
        maven { url 'http://121.40.32.242:8081/repository/bajie-release/' }
        maven { url 'http://121.40.32.242:8081/repository/maven-public/' }
        mavenCentral()
    }

    dependencies {
        compileOnly "${lib['lombok']}"
        annotationProcessor "${lib['lombok']}"
        implementation "${lib['swagger-annotations']}"
        implementation "${lib['slf4j-api']}"
        implementation "${lib['logback-classic']}"
        implementation "${lib['hutool']}"
        implementation "${lib['commons-lang3']}"
        implementation "${lib['commons-collections4']}"
        implementation "${lib['commons-io']}"
        implementation "${lib['fastjson']}"
        implementation "${lib['mapstruct']}"
        annotationProcessor "${lib['mapstruct-processor']}"
        implementation "${lib['guava']}"
        implementation "${lib['gson']}"
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
            mavenBom("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
            mavenBom("com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}")
        }
    }

    test {
        useJUnitPlatform()
    }

    // ==================================== 上传私服配置 start ====================================
    println("======================== 开始上传jar包到私服 ============================")
    // implementation 'com.bajie:bajie-base:1.0.0-SNAPSHOT'
    println("implementation '${project.group}:${project.name}:${project.version}'")
    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url:rootProject.ext.nexus.releasesUrl){
                    authentication(userName: rootProject.ext.nexus.userName, password: rootProject.nexus.password)
                }
                snapshotRepository(url:rootProject.ext.nexus.snapshotUrl){
                    authentication(userName: rootProject.ext.nexus.userName, password: rootProject.nexus.password)
                }
            }
        }
    }

//    // 上传source
//    task sourcesJar(type: Jar) {
//        from sourceSets.main.allJava
//        classifier 'sources'
//    }
//
//    artifacts {
//        archives sourcesJar
//    }
    println("======================== 成功上传jar包到私服 ============================")
// ==================================== 上传私服配置 end ====================================
}
//println('====================================================')
//println("bajie-common")
//println("javaVersion:${javaVersion}")
//println("springVersion:${springVersion}")
//println("springBootVersion:${springBootVersion}")
//println("springCloudVersion:${springCloudVersion}")
//println("springCloudAlibabaVersion:${springCloudAlibabaVersion}")
//println("lombok:${rootProject.lib.lombok}")
//println("lombok:${rootProject.lib['lombok']}")
//println("commons-lang3:${rootProject.lib['commons-lang3']}")
//println('====================================================')
